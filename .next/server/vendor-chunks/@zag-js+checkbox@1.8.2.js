"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+checkbox@1.8.2";
exports.ids = ["vendor-chunks/@zag-js+checkbox@1.8.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zag-js+checkbox@1.8.2/node_modules/@zag-js/checkbox/dist/index.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zag-js+checkbox@1.8.2/node_modules/@zag-js/checkbox/dist/index.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   anatomy: () => (/* binding */ anatomy),\n/* harmony export */   connect: () => (/* binding */ connect),\n/* harmony export */   machine: () => (/* binding */ machine),\n/* harmony export */   props: () => (/* binding */ props),\n/* harmony export */   splitProps: () => (/* binding */ splitProps)\n/* harmony export */ });\n/* harmony import */ var _zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/anatomy */ \"(ssr)/./node_modules/.pnpm/@zag-js+anatomy@1.8.2/node_modules/@zag-js/anatomy/dist/index.mjs\");\n/* harmony import */ var _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @zag-js/dom-query */ \"(ssr)/./node_modules/.pnpm/@zag-js+dom-query@1.8.2/node_modules/@zag-js/dom-query/dist/index.mjs\");\n/* harmony import */ var _zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @zag-js/focus-visible */ \"(ssr)/./node_modules/.pnpm/@zag-js+focus-visible@1.8.2/node_modules/@zag-js/focus-visible/dist/index.mjs\");\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/.pnpm/@zag-js+core@1.8.2/node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/.pnpm/@zag-js+types@1.8.2/node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/.pnpm/@zag-js+utils@1.8.2/node_modules/@zag-js/utils/dist/index.mjs\");\n\n\n\n\n\n\n\n// src/checkbox.anatomy.ts\nvar anatomy = (0,_zag_js_anatomy__WEBPACK_IMPORTED_MODULE_0__.createAnatomy)(\"checkbox\").parts(\"root\", \"label\", \"control\", \"indicator\");\nvar parts = anatomy.build();\n\n// src/checkbox.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `checkbox:${ctx.id}`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `checkbox:${ctx.id}:label`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `checkbox:${ctx.id}:control`;\nvar getHiddenInputId = (ctx) => ctx.ids?.hiddenInput ?? `checkbox:${ctx.id}:input`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getHiddenInputEl = (ctx) => ctx.getById(getHiddenInputId(ctx));\n\n// src/checkbox.connect.ts\nfunction connect(service, normalize) {\n  const { send, context, prop, computed, scope } = service;\n  const disabled = prop(\"disabled\");\n  const readOnly = prop(\"readOnly\");\n  const invalid = prop(\"invalid\");\n  const focused = !disabled && context.get(\"focused\");\n  const focusVisible = !disabled && context.get(\"focusVisible\");\n  const checked = computed(\"checked\");\n  const indeterminate = computed(\"indeterminate\");\n  const dataAttrs = {\n    \"data-active\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"active\")),\n    \"data-focus\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focused),\n    \"data-focus-visible\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(focusVisible),\n    \"data-readonly\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(readOnly),\n    \"data-hover\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(context.get(\"hovered\")),\n    \"data-disabled\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(disabled),\n    \"data-state\": indeterminate ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\",\n    \"data-invalid\": (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dataAttr)(invalid)\n  };\n  return {\n    checked,\n    disabled,\n    indeterminate,\n    focused,\n    checkedState: checked,\n    setChecked(checked2) {\n      send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: false });\n    },\n    toggleChecked() {\n      send({ type: \"CHECKED.TOGGLE\", checked, isTrusted: false });\n    },\n    getRootProps() {\n      return normalize.label({\n        ...parts.root.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope),\n        htmlFor: getHiddenInputId(scope),\n        onPointerMove() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: true } });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"CONTEXT.SET\", context: { hovered: false } });\n        },\n        onClick(event) {\n          const target = (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.getEventTarget)(event);\n          if (target === getHiddenInputEl(scope)) {\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getLabelProps() {\n      return normalize.element({\n        ...parts.label.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getLabelId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"aria-hidden\": true\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        ...dataAttrs,\n        dir: prop(\"dir\"),\n        hidden: !indeterminate && !checked\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        id: getHiddenInputId(scope),\n        type: \"checkbox\",\n        required: prop(\"required\"),\n        defaultChecked: checked,\n        disabled,\n        \"aria-labelledby\": getLabelId(scope),\n        \"aria-invalid\": invalid,\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        value: prop(\"value\"),\n        style: _zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.visuallyHiddenStyle,\n        onFocus() {\n          const focusVisible2 = (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)();\n          send({ type: \"CONTEXT.SET\", context: { focused: true, focusVisible: focusVisible2 } });\n        },\n        onBlur() {\n          send({ type: \"CONTEXT.SET\", context: { focused: false, focusVisible: false } });\n        },\n        onClick(event) {\n          if (readOnly) {\n            event.preventDefault();\n            return;\n          }\n          const checked2 = event.currentTarget.checked;\n          send({ type: \"CHECKED.SET\", checked: checked2, isTrusted: true });\n        }\n      });\n    }\n  };\n}\nvar { not } = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createGuards)();\nvar machine = (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_3__.createMachine)({\n  props({ props: props2 }) {\n    return {\n      value: \"on\",\n      ...props2,\n      defaultChecked: !!props2.defaultChecked\n    };\n  },\n  initialState() {\n    return \"ready\";\n  },\n  context({ prop, bindable }) {\n    return {\n      checked: bindable(() => ({\n        defaultValue: prop(\"defaultChecked\"),\n        value: prop(\"checked\"),\n        onChange(checked) {\n          prop(\"onCheckedChange\")?.({ checked });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false })),\n      focusVisible: bindable(() => ({ defaultValue: false })),\n      active: bindable(() => ({ defaultValue: false })),\n      focused: bindable(() => ({ defaultValue: false })),\n      hovered: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  watch({ track, context, prop, action }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"removeFocusIfNeeded\"]);\n    });\n    track([() => context.get(\"checked\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackPressEvent\", \"trackFocusVisible\"],\n  on: {\n    \"CHECKED.TOGGLE\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"toggleChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"toggleChecked\"]\n      }\n    ],\n    \"CHECKED.SET\": [\n      {\n        guard: not(\"isTrusted\"),\n        actions: [\"setChecked\", \"dispatchChangeEvent\"]\n      },\n      {\n        actions: [\"setChecked\"]\n      }\n    ],\n    \"CONTEXT.SET\": {\n      actions: [\"setContext\"]\n    }\n  },\n  computed: {\n    indeterminate: ({ context }) => isIndeterminate(context.get(\"checked\")),\n    checked: ({ context }) => isChecked(context.get(\"checked\")),\n    disabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\")\n  },\n  states: {\n    ready: {}\n  },\n  implementations: {\n    guards: {\n      isTrusted: ({ event }) => !!event.isTrusted\n    },\n    effects: {\n      trackPressEvent({ context, computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackPress)({\n          pointerNode: getRootEl(scope),\n          keyboardNode: getHiddenInputEl(scope),\n          isValidKey: (event) => event.key === \" \",\n          onPress: () => context.set(\"active\", false),\n          onPressStart: () => context.set(\"active\", true),\n          onPressEnd: () => context.set(\"active\", false)\n        });\n      },\n      trackFocusVisible({ computed, scope }) {\n        if (computed(\"disabled\")) return;\n        return (0,_zag_js_focus_visible__WEBPACK_IMPORTED_MODULE_2__.trackFocusVisible)({ root: scope.getRootNode?.() });\n      },\n      trackFormControlState({ context, scope }) {\n        return (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.trackFormControl)(getHiddenInputEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"checked\", context.initial(\"checked\"));\n          }\n        });\n      }\n    },\n    actions: {\n      setContext({ context, event }) {\n        for (const key in event.context) {\n          context.set(key, event.context[key]);\n        }\n      },\n      syncInputElement({ context, computed, scope }) {\n        const inputEl = getHiddenInputEl(scope);\n        if (!inputEl) return;\n        (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.setElementChecked)(inputEl, computed(\"checked\"));\n        inputEl.indeterminate = isIndeterminate(context.get(\"checked\"));\n      },\n      removeFocusIfNeeded({ context, prop }) {\n        if (prop(\"disabled\") && context.get(\"focused\")) {\n          context.set(\"focused\", false);\n          context.set(\"focusVisible\", false);\n        }\n      },\n      setChecked({ context, event }) {\n        context.set(\"checked\", event.checked);\n      },\n      toggleChecked({ context, computed }) {\n        const checked = isIndeterminate(computed(\"checked\")) ? true : !computed(\"checked\");\n        context.set(\"checked\", checked);\n      },\n      dispatchChangeEvent({ computed, scope }) {\n        queueMicrotask(() => {\n          const inputEl = getHiddenInputEl(scope);\n          (0,_zag_js_dom_query__WEBPACK_IMPORTED_MODULE_1__.dispatchInputCheckedEvent)(inputEl, { checked: computed(\"checked\") });\n        });\n      }\n    }\n  }\n});\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction isChecked(checked) {\n  return isIndeterminate(checked) ? false : !!checked;\n}\nvar props = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_4__.createProps)()([\n  \"defaultChecked\",\n  \"checked\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"name\",\n  \"onCheckedChange\",\n  \"readOnly\",\n  \"required\",\n  \"value\"\n]);\nvar splitProps = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_5__.createSplitProps)(props);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zag-js+checkbox@1.8.2/node_modules/@zag-js/checkbox/dist/index.mjs\n");

/***/ })

};
;