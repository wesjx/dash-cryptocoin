"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+react@1.8.2_react-dom@19.1.0_react@19.1.0";
exports.ids = ["vendor-chunks/@zag-js+react@1.8.2_react-dom@19.1.0_react@19.1.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zag-js+react@1.8.2_react-dom@19.1.0_react@19.1.0/node_modules/@zag-js/react/dist/index.mjs":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zag-js+react@1.8.2_react-dom@19.1.0_react@19.1.0/node_modules/@zag-js/react/dist/index.mjs ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Portal: () => (/* binding */ Portal),\n/* harmony export */   mergeProps: () => (/* reexport safe */ _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.mergeProps),\n/* harmony export */   normalizeProps: () => (/* binding */ normalizeProps),\n/* harmony export */   useMachine: () => (/* binding */ useMachine)\n/* harmony export */ });\n/* harmony import */ var _zag_js_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @zag-js/core */ \"(ssr)/./node_modules/.pnpm/@zag-js+core@1.8.2/node_modules/@zag-js/core/dist/index.mjs\");\n/* harmony import */ var _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @zag-js/utils */ \"(ssr)/./node_modules/.pnpm/@zag-js+utils@1.8.2/node_modules/@zag-js/utils/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@15.3.0_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/.pnpm/next@15.3.0_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var _zag_js_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @zag-js/types */ \"(ssr)/./node_modules/.pnpm/@zag-js+types@1.8.2/node_modules/@zag-js/types/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@15.3.0_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ mergeProps,Portal,normalizeProps,useMachine auto */ \n\n\n\n\n\n\n\n// src/index.ts\nvar useSafeLayoutEffect = typeof globalThis.document !== \"undefined\" ? react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_1__.useEffect;\n// src/bindable.ts\nfunction useBindable(props) {\n    const initial = props().value ?? props().defaultValue;\n    const eq = props().isEqual ?? Object.is;\n    const [initialValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initial);\n    const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialValue);\n    const controlled = props().value !== void 0;\n    const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n    valueRef.current = controlled ? props().value : value;\n    const prevValue = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(valueRef.current);\n    useSafeLayoutEffect({\n        \"useBindable.useSafeLayoutEffect\": ()=>{\n            prevValue.current = valueRef.current;\n        }\n    }[\"useBindable.useSafeLayoutEffect\"], [\n        value,\n        props().value\n    ]);\n    const setFn = (value2)=>{\n        const prev = prevValue.current;\n        const next = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(value2) ? value2(prev) : value2;\n        if (props().debug) {\n            console.log(`[bindable > ${props().debug}] setValue`, {\n                next,\n                prev\n            });\n        }\n        if (!controlled) setValue(next);\n        if (!eq(next, prev)) {\n            props().onChange?.(next, prev);\n        }\n    };\n    function get() {\n        return controlled ? props().value : value;\n    }\n    return {\n        initial: initialValue,\n        ref: valueRef,\n        get,\n        set (value2) {\n            const exec = props().sync ? react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync : _zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.identity;\n            exec(()=>setFn(value2));\n        },\n        invoke (nextValue, prevValue2) {\n            props().onChange?.(nextValue, prevValue2);\n        },\n        hash (value2) {\n            return props().hash?.(value2) ?? String(value2);\n        }\n    };\n}\nuseBindable.cleanup = (fn)=>{\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>fn, []);\n};\nuseBindable.ref = (defaultValue)=>{\n    const value = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(defaultValue);\n    return {\n        get: ()=>value.current,\n        set: (next)=>{\n            value.current = next;\n        }\n    };\n};\nfunction useRefs(refs) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(refs);\n    return {\n        get (key) {\n            return ref.current[key];\n        },\n        set (key, value) {\n            ref.current[key] = value;\n        }\n    };\n}\nvar useTrack = (deps, effect)=>{\n    const render = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    const called = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useTrack.useEffect\": ()=>{\n            const mounted = render.current;\n            const run = mounted && called.current;\n            if (run) return effect();\n            called.current = true;\n        }\n    }[\"useTrack.useEffect\"], [\n        ...(deps ?? []).map({\n            \"useTrack.useEffect\": (d)=>typeof d === \"function\" ? d() : d\n        }[\"useTrack.useEffect\"])\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useTrack.useEffect\": ()=>{\n            render.current = true;\n            return ({\n                \"useTrack.useEffect\": ()=>{\n                    render.current = false;\n                }\n            })[\"useTrack.useEffect\"];\n        }\n    }[\"useTrack.useEffect\"], []);\n};\n// src/machine.ts\nfunction useMachine(machine, userProps = {}) {\n    const scope = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"useMachine.useMemo[scope]\": ()=>{\n            const { id, ids, getRootNode } = userProps;\n            return (0,_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.createScope)({\n                id,\n                ids,\n                getRootNode\n            });\n        }\n    }[\"useMachine.useMemo[scope]\"], [\n        userProps\n    ]);\n    const debug = (...args)=>{\n        if (machine.debug) console.log(...args);\n    };\n    const props = machine.props?.({\n        props: (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.compact)(userProps),\n        scope\n    }) ?? userProps;\n    const prop = useProp(props);\n    const context = machine.context?.({\n        prop,\n        bindable: useBindable,\n        scope,\n        flush,\n        getContext () {\n            return ctx;\n        },\n        getComputed () {\n            return computed;\n        },\n        getRefs () {\n            return refs;\n        }\n    });\n    const contextRef = useLiveRef(context);\n    const ctx = {\n        get (key) {\n            return contextRef.current?.[key].ref.current;\n        },\n        set (key, value) {\n            contextRef.current?.[key].set(value);\n        },\n        initial (key) {\n            return contextRef.current?.[key].initial;\n        },\n        hash (key) {\n            const current = contextRef.current?.[key].get();\n            return contextRef.current?.[key].hash(current);\n        }\n    };\n    const effects = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(/* @__PURE__ */ new Map());\n    const transitionRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const previousEventRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const eventRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        type: \"\"\n    });\n    const getEvent = ()=>({\n            ...eventRef.current,\n            current () {\n                return eventRef.current;\n            },\n            previous () {\n                return previousEventRef.current;\n            }\n        });\n    const getState = ()=>({\n            ...state,\n            matches (...values) {\n                return values.includes(state.ref.current);\n            },\n            hasTag (tag) {\n                return !!machine.states[state.ref.current]?.tags?.includes(tag);\n            }\n        });\n    const refs = useRefs(machine.refs?.({\n        prop,\n        context: ctx\n    }) ?? {});\n    const getParams = ()=>({\n            state: getState(),\n            context: ctx,\n            event: getEvent(),\n            prop,\n            send,\n            action,\n            guard,\n            track: useTrack,\n            refs,\n            computed,\n            flush,\n            scope,\n            choose\n        });\n    const action = (keys)=>{\n        const strs = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(keys) ? keys(getParams()) : keys;\n        if (!strs) return;\n        const fns = strs.map((s)=>{\n            const fn = machine.implementations?.actions?.[s];\n            if (!fn) (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js] No implementation found for action \"${JSON.stringify(s)}\"`);\n            return fn;\n        });\n        for (const fn of fns){\n            fn?.(getParams());\n        }\n    };\n    const guard = (str)=>{\n        if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(str)) return str(getParams());\n        return machine.implementations?.guards?.[str](getParams());\n    };\n    const effect = (keys)=>{\n        const strs = (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(keys) ? keys(getParams()) : keys;\n        if (!strs) return;\n        const fns = strs.map((s)=>{\n            const fn = machine.implementations?.effects?.[s];\n            if (!fn) (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.warn)(`[zag-js] No implementation found for effect \"${JSON.stringify(s)}\"`);\n            return fn;\n        });\n        const cleanups = [];\n        for (const fn of fns){\n            const cleanup = fn?.(getParams());\n            if (cleanup) cleanups.push(cleanup);\n        }\n        return ()=>cleanups.forEach((fn)=>fn?.());\n    };\n    const choose = (transitions)=>{\n        return (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.toArray)(transitions).find((t)=>{\n            let result = !t.guard;\n            if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isString)(t.guard)) result = !!guard(t.guard);\n            else if ((0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.isFunction)(t.guard)) result = t.guard(getParams());\n            return result;\n        });\n    };\n    const computed = (key)=>{\n        (0,_zag_js_utils__WEBPACK_IMPORTED_MODULE_4__.ensure)(machine.computed, ()=>`[zag-js] No computed object found on machine`);\n        const fn = machine.computed[key];\n        return fn({\n            context: ctx,\n            event: getEvent(),\n            prop,\n            refs,\n            scope,\n            computed\n        });\n    };\n    const state = useBindable({\n        \"useMachine.useBindable[state]\": ()=>({\n                defaultValue: machine.initialState({\n                    prop\n                }),\n                onChange (nextState, prevState) {\n                    if (prevState) {\n                        const exitEffects = effects.current.get(prevState);\n                        exitEffects?.();\n                        effects.current.delete(prevState);\n                    }\n                    if (prevState) {\n                        action(machine.states[prevState]?.exit);\n                    }\n                    action(transitionRef.current?.actions);\n                    const cleanup = effect(machine.states[nextState]?.effects);\n                    if (cleanup) effects.current.set(nextState, cleanup);\n                    if (prevState === _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE) {\n                        action(machine.entry);\n                        const cleanup2 = effect(machine.effects);\n                        if (cleanup2) effects.current.set(_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE, cleanup2);\n                    }\n                    action(machine.states[nextState]?.entry);\n                }\n            })\n    }[\"useMachine.useBindable[state]\"]);\n    const hydratedStateRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);\n    const statusRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(_zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.NotStarted);\n    useSafeLayoutEffect({\n        \"useMachine.useSafeLayoutEffect\": ()=>{\n            queueMicrotask({\n                \"useMachine.useSafeLayoutEffect\": ()=>{\n                    const started = statusRef.current === _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started;\n                    statusRef.current = _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started;\n                    debug(started ? \"rehydrating...\" : \"initializing...\");\n                    const initialState = hydratedStateRef.current ?? state.initial;\n                    state.invoke(initialState, started ? state.get() : _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.INIT_STATE);\n                }\n            }[\"useMachine.useSafeLayoutEffect\"]);\n            const fns = effects.current;\n            const currentState = state.ref.current;\n            return ({\n                \"useMachine.useSafeLayoutEffect\": ()=>{\n                    debug(\"unmounting...\");\n                    hydratedStateRef.current = currentState;\n                    statusRef.current = _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Stopped;\n                    fns.forEach({\n                        \"useMachine.useSafeLayoutEffect\": (fn)=>fn?.()\n                    }[\"useMachine.useSafeLayoutEffect\"]);\n                    effects.current = /* @__PURE__ */ new Map();\n                    transitionRef.current = null;\n                    queueMicrotask({\n                        \"useMachine.useSafeLayoutEffect\": ()=>{\n                            action(machine.exit);\n                        }\n                    }[\"useMachine.useSafeLayoutEffect\"]);\n                }\n            })[\"useMachine.useSafeLayoutEffect\"];\n        }\n    }[\"useMachine.useSafeLayoutEffect\"], []);\n    const getCurrentState = ()=>{\n        if (\"ref\" in state) return state.ref.current;\n        return state.get();\n    };\n    const send = (event)=>{\n        queueMicrotask(()=>{\n            if (statusRef.current !== _zag_js_core__WEBPACK_IMPORTED_MODULE_0__.MachineStatus.Started) return;\n            previousEventRef.current = eventRef.current;\n            eventRef.current = event;\n            debug(\"send\", event);\n            let currentState = getCurrentState();\n            const transitions = // @ts-ignore\n            machine.states[currentState].on?.[event.type] ?? // @ts-ignore\n            machine.on?.[event.type];\n            const transition = choose(transitions);\n            if (!transition) return;\n            transitionRef.current = transition;\n            const target = transition.target ?? currentState;\n            debug(\"transition\", transition);\n            const changed = target !== currentState;\n            if (changed) {\n                (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(()=>state.set(target));\n            } else if (transition.reenter && !changed) {\n                state.invoke(currentState, currentState);\n            } else {\n                action(transition.actions ?? []);\n            }\n        });\n    };\n    machine.watch?.(getParams());\n    return {\n        state: getState(),\n        send,\n        context: ctx,\n        prop,\n        scope,\n        refs,\n        computed,\n        event: getEvent(),\n        getStatus: ()=>statusRef.current\n    };\n}\nfunction useLiveRef(value) {\n    const ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(value);\n    ref.current = value;\n    return ref;\n}\nfunction useProp(value) {\n    const ref = useLiveRef(value);\n    return function get(key) {\n        return ref.current[key];\n    };\n}\nfunction flush(fn) {\n    queueMicrotask(()=>{\n        (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync)(()=>fn());\n    });\n}\nvar normalizeProps = (0,_zag_js_types__WEBPACK_IMPORTED_MODULE_5__.createNormalizer)((v)=>v);\nvar Portal = (props)=>{\n    const { children, container, disabled, getRootNode } = props;\n    const isServer = \"undefined\" === \"undefined\";\n    if (isServer || disabled) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children\n    });\n    const doc = getRootNode?.().ownerDocument ?? document;\n    const mountNode = container?.current ?? doc.body;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n        children: react__WEBPACK_IMPORTED_MODULE_1__.Children.map(children, (child)=>/*#__PURE__*/ (0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(child, mountNode))\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zag-js+react@1.8.2_react-dom@19.1.0_react@19.1.0/node_modules/@zag-js/react/dist/index.mjs\n");

/***/ })

};
;